{
  "swagger": "2.0",
  "info": {
    "description": "HTTP REST API to connect to the AppManager",
    "version": "1.0",
    "title": "AppManager API"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "Api Tokens"
    },
    {
      "name": "Cluster Role Bindings"
    },
    {
      "name": "Cluster Roles"
    },
    {
      "name": "Deployments"
    },
    {
      "name": "Deployment Targets"
    },
    {
      "name": "Events"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Namespaces"
    },
    {
      "name": "Role Bindings"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Savepoints"
    },
    {
      "name": "Secret Values"
    },
    {
      "name": "Status"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/v1/api-tokens/{name}": {
      "get": {
        "tags": [
          "Api Tokens"
        ],
        "summary": "Get an api token by name",
        "description": "",
        "operationId": "getToken",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Api Tokens"
        ],
        "summary": "Delete an api token by name",
        "description": "",
        "operationId": "deleteToken",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        }
      }
    },
    "/v1/api-tokens": {
      "get": {
        "tags": [
          "Api Tokens"
        ],
        "summary": "List all api tokens",
        "description": "",
        "operationId": "getTokens",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListApiToken"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Api Tokens"
        ],
        "summary": "Create a new api token",
        "description": "",
        "operationId": "createToken",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/cluster-role-bindings/{name}": {
      "get": {
        "tags": [
          "Cluster Role Bindings"
        ],
        "summary": "Get a cluster role binding by name",
        "description": "",
        "operationId": "getClusterRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRoleBinding"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cluster Role Bindings"
        ],
        "summary": "Delete a cluster role binding",
        "description": "",
        "operationId": "deleteClusterRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRoleBinding"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cluster Role Bindings"
        ],
        "summary": "Update a cluster role binding",
        "description": "",
        "operationId": "updateClusterRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterRoleBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRoleBinding"
            }
          }
        }
      }
    },
    "/v1/cluster-role-bindings": {
      "get": {
        "tags": [
          "Cluster Role Bindings"
        ],
        "summary": "List all cluster role bindings",
        "description": "",
        "operationId": "getClusterRoleBindings",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListClusterRoleBinding"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cluster Role Bindings"
        ],
        "summary": "Create a cluster role binding",
        "description": "",
        "operationId": "createClusterRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterRoleBinding"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/cluster-roles/{name}": {
      "get": {
        "tags": [
          "Cluster Roles"
        ],
        "summary": "Get a cluster role by name",
        "description": "",
        "operationId": "getClusterRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRole"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cluster Roles"
        ],
        "summary": "Delete a cluster role",
        "description": "",
        "operationId": "deleteClusterRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRole"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cluster Roles"
        ],
        "summary": "Update a cluster role",
        "description": "",
        "operationId": "updateClusterRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterRole"
            }
          }
        }
      }
    },
    "/v1/cluster-roles": {
      "get": {
        "tags": [
          "Cluster Roles"
        ],
        "summary": "List all cluster roles",
        "description": "",
        "operationId": "getClusterRoles",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListClusterRole"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cluster Roles"
        ],
        "summary": "Create a cluster role",
        "description": "",
        "operationId": "createClusterRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterRole"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "List all deployments",
        "description": "",
        "operationId": "getDeployments",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListDeployment"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deployments"
        ],
        "summary": "Create a deployment",
        "description": "",
        "operationId": "createDeployment",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "x-examples": {
              "default": "{  \n   \"metadata\":{  \n      \"name\":\"Fraud Detection\",\n      \"labels\":{  \n         \"env\":\"production\"\n      }\n   },\n   \"spec\":{  \n      \"state\":\"RUNNING\",\n      \"deploymentTargetId\":\"57b4c290-73ad-11e7-8cf7-a6006ad3dba0\",\n      \"upgradeStrategy\":{  \n         \"kind\":\"STATEFUL\"\n      },\n      \"startFromSavepoint\":{  \n         \"kind\":\"LATEST\"\n      },\n      \"template\":{  \n         \"spec\":{  \n            \"parallelism\":4,\n            \"artifact\":{  \n               \"kind\":\"jar\",\n               \"jarUri\":\"https://repo.dataartisans.com/foo/fraud_detection.jar\"\n            },\n            \"flinkConfiguration\":{  \n               \"foo\":\"bar\"\n            }\n         }\n      }\n   }\n}  }"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          },
          "201": {
            "description": "successful creation",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Get a deployment by id",
        "description": "",
        "operationId": "getDeployment",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployments"
        ],
        "summary": "Delete deployment",
        "description": "This operation expects the deployment to be in desired state CANCELLED",
        "operationId": "deleteDeployment",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deployments"
        ],
        "summary": "Update a deployment",
        "description": "",
        "operationId": "updateDeployment",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/deployment-targets/{name}": {
      "get": {
        "tags": [
          "Deployment Targets"
        ],
        "summary": "Get a deployment target by name",
        "description": "",
        "operationId": "getDeploymentTarget",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentTarget"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployment Targets"
        ],
        "summary": "Delete a deployment target",
        "description": "",
        "operationId": "deleteDeploymentTarget",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentTarget"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/deployment-targets": {
      "get": {
        "tags": [
          "Deployment Targets"
        ],
        "summary": "List all deployment targets",
        "description": "",
        "operationId": "getDeploymentTargets",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListDeploymentTarget"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deployment Targets"
        ],
        "summary": "Create a deployment target",
        "description": "",
        "operationId": "createDeploymentTarget",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentTarget"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          },
          "201": {
            "description": "successful creation",
            "schema": {
              "$ref": "#/definitions/DeploymentTarget"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Filter all events for a deployment or job",
        "description": "",
        "operationId": "getEvents",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "jobId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListEvent"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "List all jobs. Can be filtered by DeploymentId",
        "description": "",
        "operationId": "getJobs",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListJob"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/jobs/{jobId}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get a job by id",
        "description": "",
        "operationId": "getJob",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        }
      }
    },
    "/v1/namespaces/{name}": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Get a namespace by name",
        "description": "",
        "operationId": "getNamespace",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Delete a namespace by name",
        "description": "",
        "operationId": "deleteNamespace",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        }
      }
    },
    "/v1/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "List namespaces",
        "description": "",
        "operationId": "listNamespaces",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListNamespace"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Create a namespace",
        "description": "",
        "operationId": "postNamespace",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/role-bindings/{name}": {
      "get": {
        "tags": [
          "Role Bindings"
        ],
        "summary": "Get a role binding by name",
        "description": "",
        "operationId": "getRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RoleBinding"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Bindings"
        ],
        "summary": "Delete a role binding",
        "description": "",
        "operationId": "deleteRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RoleBinding"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Role Bindings"
        ],
        "summary": "Update a role binding",
        "description": "",
        "operationId": "updateRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RoleBinding"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/role-bindings": {
      "get": {
        "tags": [
          "Role Bindings"
        ],
        "summary": "List all role bindings",
        "description": "",
        "operationId": "getRoleBindings",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListRoleBinding"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role Bindings"
        ],
        "summary": "Create a role binding",
        "description": "",
        "operationId": "createRoleBinding",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleBinding"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List all roles",
        "description": "",
        "operationId": "getRoles",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "labelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListRole"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a role",
        "description": "",
        "operationId": "createRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/roles/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a role by name",
        "description": "",
        "operationId": "getRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "description": "",
        "operationId": "deleteRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "description": "",
        "operationId": "updateRole",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/savepoints": {
      "get": {
        "tags": [
          "Savepoints"
        ],
        "summary": "List all savepoints. Can be filtered by DeploymentId",
        "description": "",
        "operationId": "getSavepoints",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "jobId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Savepoint"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Savepoints"
        ],
        "summary": "Create a new savepoint",
        "description": "",
        "operationId": "createSavepoint",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Savepoint"
            },
            "x-examples": {
              "default": "{\n  \"metadata\": {\n    \"deploymentId\": \"19570815-2528-4bda-a6ba-733cc29282c4\"\n  }\n}"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/savepoints/{savepointId}": {
      "get": {
        "tags": [
          "Savepoints"
        ],
        "summary": "Get a savepoint by id",
        "description": "",
        "operationId": "getSavepoint",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "savepointId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Savepoint"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/secret-values": {
      "get": {
        "tags": [
          "Secret Values"
        ],
        "summary": "List all secrets values",
        "description": "",
        "operationId": "getSecretValues",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceListSecretValue"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Secret Values"
        ],
        "summary": "Create a secret value",
        "description": "",
        "operationId": "createSecretValue",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretValue"
            },
            "x-examples": {
              "default": "{\n  \"metadata\": {\n    \"name\": \"mypassword\"\n  },\n  \"spec\": {\n    \"kind\": \"Plain\",\n    \"value\": \"secret\"\n  }\n}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecretValue"
            }
          }
        }
      }
    },
    "/v1/namespaces/{namespace}/secret-values/{name}": {
      "get": {
        "tags": [
          "Secret Values"
        ],
        "summary": "Get a secret value by name",
        "description": "",
        "operationId": "getSecretValue",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecretValue"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Secret Values"
        ],
        "summary": "Delete a secret value",
        "description": "",
        "operationId": "deleteSecretValue",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecretValue"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Secret Values"
        ],
        "summary": "Update a secret value",
        "description": "",
        "operationId": "updateSecretValue",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretValue"
            },
            "x-examples": {
              "default": "{\n  \"metadata\": {\n    \"name\": \"mypassword\"\n  },\n  \"spec\": {\n    \"kind\": \"Plain\",\n    \"value\": \"secret\"\n  }\n}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecretValue"
            }
          }
        }
      }
    },
    "/v1/status/system-info": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get system's information",
        "description": "",
        "operationId": "getSystemInfo",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemInformation"
            }
          }
        }
      }
    },
    "/v1/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Check that the server is running",
        "description": "",
        "operationId": "getStatus",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Any": {},
    "ApiToken": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ApiTokenMetadata"
        },
        "spec": {
          "$ref": "#/definitions/ApiTokenSpec"
        }
      }
    },
    "ApiTokenMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ApiTokenSpec": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "ResourceList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ResourceListApiToken": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiToken"
          }
        }
      }
    },
    "ResourceListMetadata": {
      "type": "object"
    },
    "ClusterRoleBinding": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ClusterRoleBindingMetadata"
        },
        "spec": {
          "$ref": "#/definitions/ClusterRoleBindingSpec"
        }
      }
    },
    "ClusterRoleBindingMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClusterRoleBindingRoleRef": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "CLUSTERROLE"
          ]
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ClusterRoleBindingSpec": {
      "type": "object",
      "required": [
        "roleRef",
        "subjects"
      ],
      "properties": {
        "subjects": {
          "$ref": "#/definitions/IterableRoleBindingSubject"
        },
        "roleRef": {
          "$ref": "#/definitions/ClusterRoleBindingRoleRef"
        }
      }
    },
    "IterableRoleBindingSubject": {
      "type": "object"
    },
    "ResourceListClusterRoleBinding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterRoleBinding"
          }
        }
      }
    },
    "ClusterRole": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ClusterRoleMetadata"
        },
        "spec": {
          "$ref": "#/definitions/ClusterRoleSpec"
        }
      }
    },
    "ClusterRoleMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClusterRoleSpec": {
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "rules": {
          "$ref": "#/definitions/IterableRoleRule"
        }
      }
    },
    "IterableRoleRule": {
      "type": "object"
    },
    "ResourceListClusterRole": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterRole"
          }
        }
      }
    },
    "Artifact": {
      "type": "object",
      "required": [
        "kind",
        "jarUri"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "JAR"
          ]
        },
        "jarUri": {
          "type": "string"
        },
        "mainArgs": {
          "type": "string"
        },
        "entryClass": {
          "type": "string"
        },
        "flinkVersion": {
          "type": "string"
        },
        "flinkImageRegistry": {
          "type": "string"
        },
        "flinkImageTag": {
          "type": "string"
        }
      }
    },
    "Deployment": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/DeploymentMetadata"
        },
        "spec": {
          "$ref": "#/definitions/DeploymentSpec"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus"
        }
      }
    },
    "DeploymentMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeploymentRestoreStrategy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "LATEST_SAVEPOINT",
            "LATEST_STATE",
            "NONE"
          ]
        },
        "allowNonRestoredState": {
          "type": "boolean"
        }
      }
    },
    "DeploymentSpec": {
      "type": "object",
      "required": [
        "deploymentTargetId",
        "state",
        "template",
        "upgradeStrategy"
      ],
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "RUNNING",
            "SUSPENDED",
            "CANCELLED"
          ]
        },
        "upgradeStrategy": {
          "$ref": "#/definitions/DeploymentUpgradeStrategy"
        },
        "restoreStrategy": {
          "$ref": "#/definitions/DeploymentRestoreStrategy"
        },
        "startFromSavepoint": {
          "$ref": "#/definitions/DeploymentStartFromSavepoint"
        },
        "deploymentTargetId": {
          "type": "string",
          "format": "uuid"
        },
        "maxSavepointCreationAttempts": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "maxJobCreationAttempts": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "template": {
          "$ref": "#/definitions/DeploymentTemplate"
        }
      }
    },
    "DeploymentStartFromSavepoint": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "NONE",
            "LATEST"
          ]
        }
      }
    },
    "DeploymentStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "RUNNING",
            "SUSPENDED",
            "CANCELLED",
            "TRANSITIONING",
            "FAILED",
            "FINISHED"
          ]
        }
      }
    },
    "DeploymentTemplate": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/DeploymentTemplateMetadata"
        },
        "spec": {
          "$ref": "#/definitions/DeploymentTemplateSpec"
        }
      }
    },
    "DeploymentTemplateMetadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentTemplateSpec": {
      "type": "object",
      "required": [
        "artifact"
      ],
      "properties": {
        "artifact": {
          "$ref": "#/definitions/Artifact"
        },
        "parallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "numberOfTaskManagers": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceSpec"
          }
        },
        "flinkConfiguration": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "logging": {
          "$ref": "#/definitions/Logging"
        },
        "kubernetes": {
          "$ref": "#/definitions/KubernetesOptions"
        }
      }
    },
    "DeploymentUpgradeStrategy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "STATELESS",
            "STATEFUL",
            "NONE"
          ]
        }
      }
    },
    "EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "JsonPatchGeneric": {
      "description": "Since Swagger 2 doesn't have oneOf support, this definition should fit all JSON Patch objects.",
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [
            "add",
            "remove",
            "replace",
            "copy",
            "move",
            "test"
          ]
        },
        "path": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Any"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "valueNode": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "array": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        }
      }
    },
    "KubernetesOptions": {
      "type": "object",
      "properties": {
        "pods": {
          "$ref": "#/definitions/Pods"
        }
      }
    },
    "LocalObjectReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Logging": {
      "type": "object",
      "properties": {
        "log4jLoggers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Pods": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityContext": {
          "$ref": "#/definitions/JsonNode"
        },
        "affinity": {
          "$ref": "#/definitions/JsonNode"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonNode"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeAndMount"
          }
        },
        "envVars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          }
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalObjectReference"
          }
        }
      }
    },
    "ResourceListDeployment": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        }
      }
    },
    "ResourceSpec": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "memory": {
          "type": "string"
        }
      }
    },
    "VolumeAndMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "volume": {
          "$ref": "#/definitions/JsonNode"
        },
        "volumeMount": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "DeploymentTarget": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/DeploymentTargetMetadata"
        },
        "spec": {
          "$ref": "#/definitions/DeploymentTargetSpec"
        }
      }
    },
    "DeploymentTargetMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeploymentTargetSpec": {
      "type": "object",
      "required": [
        "kubernetes"
      ],
      "properties": {
        "kubernetes": {
          "$ref": "#/definitions/KubernetesTarget"
        },
        "deploymentPatchSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonPatchGeneric"
          }
        }
      }
    },
    "KubernetesTarget": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "ResourceListDeploymentTarget": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentTarget"
          }
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/EventMetadata"
        },
        "spec": {
          "$ref": "#/definitions/EventSpec"
        }
      }
    },
    "EventMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deploymentId": {
          "type": "string",
          "format": "uuid"
        },
        "jobId": {
          "type": "string",
          "format": "uuid"
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "enum": [
            "STATE_TRANSITION_IS_NEEDED",
            "FOUND_A_JOB_TO_TERMINATE",
            "FOUND_A_JOB_TO_WAIT_FOR_ITS_TERMINATION",
            "AWAITING_SAVEPOINT_COMPLETION_TO_TRANSITION_TO_SUSPENDED",
            "CREATING_A_SAVEPOINT_BEFORE_SUSPENSION",
            "FOUND_A_COMPLETED_SAVEPOINT_READY_FOR_SUSPENSION",
            "USING_AN_UPGRADE_STRATEGY",
            "CREATING_A_NEW_JOB",
            "FAILED_CREATING_A_NEW_JOB",
            "AWAITING_A_JOB_TO_START",
            "FOUND_A_STOPPED_JOB_AND_WILL_TERMINATE_IT",
            "STATE_TRANSITION_IS_COMPLETED",
            "TRANSITIONED_TO_FINISHED_STATE",
            "AWAITING_A_JOB_TO_TERMINATE",
            "TOO_MANY_FAILED_SUSPENSION_ATTEMPTS",
            "TOO_MANY_FAILED_JOB_CREATION_ATTEMPTS",
            "SPINNING_UP_A_CLUSTER_FOR_A_JOB",
            "JOB_SUCCESSFULLY_STARTED",
            "JOB_SUCCESSFULLY_FINISHED",
            "AWAITING_FOR_A_CLUSTER_TO_SPIN_UP",
            "TERMINATING_A_JOB_DUE_TO_AN_UNRECOVERABLE_FAILURE",
            "AWAIT_FOR_A_CLUSTER_TO_TEARDOWN",
            "RESOURCE_QUOTA_EXCEEDED",
            "TRANSITIONING_TO_FAILED_STATE_BECAUSE_OF_A_MISSING_JOB",
            "TRANSITIONING_TO_FAILED_STATE_BECAUSE_JOB_NOT_STARTED",
            "TRANSITIONING_TO_FAILED_STATE_BECAUSE_SAVEPOINT_FAILED_IN_FLINK",
            "TRANSITIONED_TO_COMPLETED",
            "AWAITING_FOR_A_SAVEPOINT_TO_COMPLETE",
            "AN_UN_RECOVERABLE_FAILURE_WHILE_TRIGGERING_A_SAVEPOINT",
            "RECOVERABLE_FAILURE_WHILE_TRIGGERING_A_SAVEPOINT",
            "SUCCESSFULLY_TRIGGERED_A_SAVEPOINT",
            "NEED_TO_TRIGGER_A_SAVEPOINT",
            "AN_UNRECOVERABLE_FAILURE_WHILE_TAKING_A_SAVEPOINT",
            "RECOVERABLE_FAILURE_WHILE_CHECKING_A_SAVEPOINT_STATUS",
            "FOUND_AN_OLD_JOB_AND_WILL_TERMINATE_IT",
            "COULD_NOT_FIND_A_JOB_TO_SUSPEND",
            "JOB_IS_NOT_CONFIGURED_WITH_SAVEPOINT_SUPPORT",
            "REFERENCED_DEPLOYMENT_TARGET_DOES_NOT_EXIST",
            "GENERAL_FAILURE",
            "FAILED_TO_CREATE_CLUSTER_FOR_JOB"
          ]
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "EventSpec": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ResourceListEvent": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "Failure": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "failedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/JobMetadata"
        },
        "spec": {
          "$ref": "#/definitions/JobSpec"
        },
        "status": {
          "$ref": "#/definitions/JobStatus"
        }
      }
    },
    "JobDeploymentTarget": {
      "type": "object",
      "properties": {
        "kubernetes": {
          "$ref": "#/definitions/KubernetesTarget"
        }
      }
    },
    "JobMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "terminatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "deploymentId": {
          "type": "string",
          "format": "uuid"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "JobSpec": {
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/Artifact"
        },
        "parallelism": {
          "type": "integer",
          "format": "int32"
        },
        "flinkConfiguration": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceSpec"
          }
        },
        "savepointLocation": {
          "type": "string",
          "format": "uri"
        },
        "allowNonRestoredState": {
          "type": "boolean"
        },
        "numberOfTaskManagers": {
          "type": "integer",
          "format": "int32"
        },
        "logging": {
          "$ref": "#/definitions/Logging"
        },
        "kubernetes": {
          "$ref": "#/definitions/KubernetesOptions"
        },
        "deploymentTarget": {
          "$ref": "#/definitions/JobDeploymentTarget"
        }
      }
    },
    "JobStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STARTING",
            "STANDBY",
            "STARTED",
            "TERMINATING",
            "FAILED",
            "TERMINATED",
            "FINISHED"
          ]
        },
        "failure": {
          "$ref": "#/definitions/Failure"
        }
      }
    },
    "ResourceListJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        }
      }
    },
    "Namespace": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/NamespaceMetadata"
        },
        "status": {
          "$ref": "#/definitions/NamespaceStatus"
        }
      }
    },
    "NamespaceMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NamespaceStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "MARKED_FOR_DELETION"
          ]
        }
      }
    },
    "ResourceListNamespace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Namespace"
          }
        }
      }
    },
    "RoleBinding": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/RoleBindingMetadata"
        },
        "spec": {
          "$ref": "#/definitions/RoleBindingSpec"
        }
      }
    },
    "RoleBindingMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RoleBindingRoleRef": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "ROLE",
            "CLUSTERROLE"
          ]
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RoleBindingSpec": {
      "type": "object",
      "required": [
        "roleRef",
        "subjects"
      ],
      "properties": {
        "subjects": {
          "$ref": "#/definitions/IterableRoleBindingSubject"
        },
        "roleRef": {
          "$ref": "#/definitions/RoleBindingRoleRef"
        }
      }
    },
    "ResourceListRoleBinding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleBinding"
          }
        }
      }
    },
    "ResourceListRole": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/RoleMetadata"
        },
        "spec": {
          "$ref": "#/definitions/RoleSpec"
        }
      }
    },
    "RoleMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RoleSpec": {
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "rules": {
          "$ref": "#/definitions/IterableRoleRule"
        }
      }
    },
    "Savepoint": {
      "type": "object",
      "required": [
        "metadata",
        "spec",
        "status"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/SavepointMetadata"
        },
        "status": {
          "$ref": "#/definitions/SavepointStatus"
        },
        "spec": {
          "$ref": "#/definitions/SavepointSpec"
        }
      }
    },
    "SavepointMetadata": {
      "type": "object",
      "required": [
        "deploymentId"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deploymentId": {
          "type": "string",
          "format": "uuid"
        },
        "jobId": {
          "type": "string",
          "format": "uuid"
        },
        "origin": {
          "type": "string",
          "enum": [
            "USER_REQUEST",
            "SUSPEND_AND_UPGRADE",
            "SUSPEND",
            "COPIED"
          ]
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "SavepointSpec": {
      "type": "object",
      "required": [
        "flinkSavepointId",
        "savepointLocation"
      ],
      "properties": {
        "savepointLocation": {
          "type": "string"
        },
        "flinkSavepointId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SavepointStatus": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STARTED",
            "COMPLETED",
            "FAILED"
          ]
        },
        "failure": {
          "$ref": "#/definitions/Failure"
        }
      }
    },
    "SecretValue": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/SecretValueMetadata"
        },
        "spec": {
          "$ref": "#/definitions/SecretValueSpec"
        }
      }
    },
    "SecretValueMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SecretValueSpec": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "ResourceListSecretValue": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ResourceListMetadata"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretValue"
          }
        }
      }
    },
    "License": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/LicenseMetadata"
        },
        "spec": {
          "$ref": "#/definitions/LicenseSpec"
        }
      }
    },
    "LicenseMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LicenseSpec": {
      "type": "object",
      "properties": {
        "licenseId": {
          "type": "string",
          "format": "uuid"
        },
        "licensedTo": {
          "type": "string"
        },
        "expires": {
          "type": "integer",
          "format": "int64"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceQuota": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/ResourceQuotaSpec"
        },
        "status": {
          "$ref": "#/definitions/ResourceQuotaStatus"
        }
      }
    },
    "ResourceQuotaQuantity": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResourceQuotaSpec": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/ResourceQuotaQuantity"
        },
        "toleratedOveruse": {
          "$ref": "#/definitions/ResourceQuotaQuantity"
        },
        "type": {
          "type": "string",
          "enum": [
            "LIMITED",
            "UNLIMITED"
          ]
        }
      }
    },
    "ResourceQuotaStatus": {
      "type": "object",
      "properties": {
        "used": {
          "$ref": "#/definitions/ResourceQuotaQuantity"
        }
      }
    },
    "RevisionInformation": {
      "type": "object",
      "properties": {
        "commitShaLong": {
          "type": "string"
        },
        "commitShaShort": {
          "type": "string"
        },
        "buildVersion": {
          "type": "string"
        },
        "buildTime": {
          "type": "string"
        }
      }
    },
    "SystemInformation": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/SystemInformationStatus"
        },
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        }
      }
    },
    "SystemInformationStatus": {
      "type": "object",
      "properties": {
        "jvmVersion": {
          "type": "string"
        },
        "revisionInformation": {
          "$ref": "#/definitions/RevisionInformation"
        },
        "resourceQuota": {
          "$ref": "#/definitions/ResourceQuota"
        },
        "license": {
          "$ref": "#/definitions/License"
        }
      }
    }
  }
}