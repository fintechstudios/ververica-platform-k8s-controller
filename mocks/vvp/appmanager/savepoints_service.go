// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	appmanagerapi "github.com/fintechstudios/ververica-platform-k8s-operator/pkg/vvp/appmanager-api"

	mock "github.com/stretchr/testify/mock"
)

// SavepointsService is an autogenerated mock type for the SavepointsService type
type SavepointsService struct {
	mock.Mock
}

// CreateSavepoint provides a mock function with given fields: ctx, namespaceName, savepoint
func (_m *SavepointsService) CreateSavepoint(ctx context.Context, namespaceName string, savepoint appmanagerapi.Savepoint) (*appmanagerapi.Savepoint, error) {
	ret := _m.Called(ctx, namespaceName, savepoint)

	var r0 *appmanagerapi.Savepoint
	if rf, ok := ret.Get(0).(func(context.Context, string, appmanagerapi.Savepoint) *appmanagerapi.Savepoint); ok {
		r0 = rf(ctx, namespaceName, savepoint)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*appmanagerapi.Savepoint)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, appmanagerapi.Savepoint) error); ok {
		r1 = rf(ctx, namespaceName, savepoint)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSavepoint provides a mock function with given fields: ctx, namespaceName, id
func (_m *SavepointsService) GetSavepoint(ctx context.Context, namespaceName string, id string) (*appmanagerapi.Savepoint, error) {
	ret := _m.Called(ctx, namespaceName, id)

	var r0 *appmanagerapi.Savepoint
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *appmanagerapi.Savepoint); ok {
		r0 = rf(ctx, namespaceName, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*appmanagerapi.Savepoint)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, namespaceName, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
