[debug] SERVER: ":44134"

[debug] Original chart version: ""
[debug] Fetched ververica/ververica-platform to /home/austin/.helm/cache/archive/ververica-platform-4.0.1.tgz

[debug] CHART PATH: /home/austin/.helm/cache/archive/ververica-platform-4.0.1.tgz

NAME:   vvp1
REVISION: 1
RELEASED: Mon Apr 20 10:28:17 2020
CHART: ververica-platform-4.0.1
USER-SUPPLIED VALUES:
acceptCommunityEditionLicense: true
rbac:
  additionalNamespaces:
  - top-speed

COMPUTED VALUES:
acceptCommunityEditionLicense: true
affinity: {}
appmanager:
  artifactFetcherTag: 2.1.0
  image:
    pullPolicy: Always
    repository: registry.ververica.com/v2.1/vvp-appmanager
    tag: 2.1.0
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 1Gi
gateway:
  image:
    pullPolicy: Always
    repository: registry.ververica.com/v2.1/vvp-gateway
    tag: 2.1.0
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 1Gi
nodeSelector: {}
persistentVolume:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: false
  size: 8Gi
  subPath: ""
rbac:
  additionalNamespaces:
  - top-speed
  create: true
  serviceAccountName: default
securityContext:
  fsGroup: 999
service:
  externalPort: 80
  type: ClusterIP
tolerations: []
ui:
  image:
    pullPolicy: Always
    repository: registry.ververica.com/v2.1/vvp-ui
    tag: 2.1.0
  resources:
    limits:
      cpu: 100m
      memory: 32Mi
    requests:
      cpu: 100m
      memory: 32Mi
vvp:
  auth:
    enabled: false
  blobStorage: {}
  flinkDeploymentDefaults:
    registry: registry.ververica.com/v2.1
    repository: flink
  persistence:
    type: ""

HOOKS:
MANIFEST:

---
# Source: ververica-platform/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vvp1-ververica-platform-config
  labels:
    chart: "ververica-platform-4.0.1"
    component: ververica-platform
    heritage: "Tiller"
    release: "vvp1"
    system: ververica-platform
data:
  application-prod-user.yaml: |
    spring:
      datasource:
        url: jdbc:sqlite:/vvp/data/vvp.db?journal_mode=WAL&synchronous=FULL&busy_timeout=10000
    vvp:
      appmanager:
        cluster:
          kubernetes.artifact-fetcher.image-registry: registry.ververica.com/v2.1
          kubernetes.artifact-fetcher.image-repository: vvp-artifact-fetcher
          kubernetes.artifact-fetcher.image-tag: 2.1.0
      auth:
        enabled: false
      blobStorage: {}
      flinkDeploymentDefaults:
        registry: registry.ververica.com/v2.1
        repository: flink
      license:
        acceptCommunityEditionLicense: true
      persistence:
        type: local
      platformKubernetesNamespace: vvp
---
# Source: ververica-platform/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
  name: vvp1-ververica-platform
  labels:
    app: vvp1-ververica-platform
    chart: "ververica-platform-4.0.1"
    component: ververica-platform
    heritage: "Tiller"
    release: "vvp1"
    system: ververica-platform
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: ververica-platform/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vvp1-ververica-platform
---
# Source: ververica-platform/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: vvp1-ververica-platform
  namespace: top-speed
rules:
- apiGroups: ["apps", "extensions"]
  resources: ["deployments"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "pods", "services", "secrets", "serviceaccounts"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
---
# Source: ververica-platform/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: vvp1-ververica-platform
rules:
- apiGroups: ["apps", "extensions"]
  resources: ["deployments"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "pods", "services", "secrets", "serviceaccounts"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
---
# Source: ververica-platform/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: vvp1-ververica-platform
subjects:
- kind: ServiceAccount
  name: vvp1-ververica-platform
roleRef:
  kind: Role
  name: vvp1-ververica-platform
  apiGroup: rbac.authorization.k8s.io
---
# Source: ververica-platform/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: vvp1-ververica-platform
  namespace: top-speed
subjects:
- kind: ServiceAccount
  name: vvp1-ververica-platform
  namespace: "vvp"
roleRef:
  kind: Role
  name: vvp1-ververica-platform
  apiGroup: rbac.authorization.k8s.io
---
# Source: ververica-platform/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vvp1-ververica-platform
  labels:
    app: vvp1-ververica-platform
    chart: "ververica-platform-4.0.1"
    component: ververica-platform
    heritage: "Tiller"
    release: "vvp1"
    system: ververica-platform
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: vvp1-ververica-platform
    component: ververica-platform
---
# Source: ververica-platform/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vvp1-ververica-platform
  labels:
    app: vvp1-ververica-platform
    chart: "ververica-platform-4.0.1"
    component: ververica-platform
    heritage: "Tiller"
    release: "vvp1"
    system: ververica-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vvp1-ververica-platform
      component: ververica-platform
      release: "vvp1"
      system: ververica-platform
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: vvp1-ververica-platform
        component: ververica-platform
        release: "vvp1"
        system: ververica-platform
      annotations:
        checksum/config: 2c4e2221cbe0a0ddb663659731b14df18d06b0b67deb802cdbc1dc2468e806bc
        checksum/blobstoragesecret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: vvp1-ververica-platform
      securityContext:
        fsGroup: 999
        
      containers:
      - name: appmanager
        image: registry.ververica.com/v2.1/vvp-appmanager:2.1.0
        imagePullPolicy: "Always"
        env:
        - name: spring.profiles.active
          value: prod,prod-user
        - name: spring.config.additional-location
          value: file:/vvp/etc/
        ports:
        - name: http
          containerPort: 9080
        - name: management
          containerPort: 9081
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: management
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: management
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 1Gi
          
        volumeMounts:
        - name: config
          mountPath: /vvp/etc
          readOnly: true
        - name: blob-storage-creds
          mountPath: /vvp/secrets/blob-storage-creds
          readOnly: true
        - name: data
          mountPath: /vvp/data
          subPath: ""
      - name: gateway
        image: registry.ververica.com/v2.1/vvp-gateway:2.1.0
        imagePullPolicy: "Always"
        env:
        - name: spring.profiles.active
          value: prod,prod-defaults,prod-user
        - name: spring.config.additional-location
          value: file:/vvp/etc/
        ports:
        - name: http
          containerPort: 8080
        - name: management
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: management
          initialDelaySeconds: 90
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: management
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 1Gi
          
        volumeMounts:
        - name: config
          mountPath: /vvp/etc
          readOnly: true
        - name: blob-storage-creds
          mountPath: /vvp/secrets/blob-storage-creds
          readOnly: true
        - name: data
          mountPath: /vvp/data
          subPath: ""
      - name: ui
        image: registry.ververica.com/v2.1/vvp-ui:2.1.0
        imagePullPolicy: "Always"
        ports:
        - name: http
          containerPort: 4200
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 32Mi
          
      volumes:
      - name: config
        configMap:
          name: vvp1-ververica-platform-config
      - name: blob-storage-creds
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: vvp1-ververica-platform
